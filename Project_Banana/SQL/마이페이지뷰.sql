DESC G_POST;

SELECT *
FROM G_CATE;

-- 중분류 카테 찾기
SELECT G_CATE_CODE AS gCateCode, CATE_NAME AS cateName
FROM G_CATE
WHERE G_CATE_BCODE = 'G_CATE1' AND G_CATE_MCODE IS NULL ;


-- b코드가 대분류 코드거나 m 코드가 널인 친구가 중분류

-- 소분류 카테 찾기
SELECT G_CATE_MCODE AS gCateMcode, CATE_NAME AS cateName
FROM G_CATE
WHERE G_CATE_BCODE = 'G_CATE1' AND G_CATE_MCODE = 'G_CATE6' ;
-- 대분류 , 중분류

-- b 코드가 대분류 코드거나 m 코드가 중분류인 친구 


SELECT TITLE, START_DATE, END_DATE, BUN_LOC
	FROM G_APPLY A LEFT JOIN G_POST P
	ON A.G_POST_CODE = P.G_POST_CODE;

SELECT TITLE, START_DATE, END_DATE, BUN_LOC
FROM G_APPLY A LEFT JOIN G_POST P
ON A.G_POST_CODE = P.G_POST_CODE;


WHERE A.B_USER_CODE = 'USER39';




-- 내가 쓴 댓글 VIEW

CREATE OR REPLACE VIEW VIEW_USER_REPLY_LIST
AS
SELECT RP.TITLE AS TITLE, RR.WDATE AS WDATE, REPLY AS REPLY, RR.B_USER_CODE
        ,(
            SELECT COUNT(*)
            FROM R_REPLY_LIKE RK 
            WHERE R_REPLY_CODE = RR.R_REPLY_CODE
        )AS REPLY_LIKE
FROM R_REPLY RR LEFT JOIN R_POST RP
ON RP.R_POST_CODE = RR.R_POST_CODE
UNION
SELECT GP.TITLE AS TITLE, GR.WDATE AS WDATE, REPLY AS REPLY, GR.B_USER_CODE
        ,(
            SELECT COUNT(*)
            FROM G_REPLY_LIKE GK 
            WHERE G_REPLY_CODE = GR.G_REPLY_CODE
        )AS REPLY_LIKE
FROM G_REPLY GR LEFT JOIN G_POST GP
ON GP.G_POST_CODE = GR.G_POST_CODE;



-- 뷰 확인
SELECT TITLE, WDATE, REPLY, B_USER_CODE, REPLY_LIKE
FROM VIEW_USER_REPLY_LIST
WHERE B_USER_CODE ='USER49';



title, wdate, reply, reply_like

SELECT *
FROM R_REPLY

        (
        SELECT *
        FROM R_REPLY RL LEFT JOIN R_REPLY_LIKE RK
        ON   RL.R_REPLY_CODE = RK.R_REPLY_CODE 
        WHERE R_POST_CODE = RP.R_POST_CODE
        )AS REPLY_LIKE